@{
    Layout = "~/Views/Shared/_RaeClassMS_Master_Layout.cshtml";
    ViewData["Title"] = "Home Page";
}

<div style="width:auto;height:400px;margin-top:50px;" id="raeChart">
</div>

<script src="~/lib/echart/echarts.js"></script>
@section scripts{
    <script>
        var startDate = new Date().getDate();
        var dateGap = 15;
        var initDataJunior = {};
        var initDataMiddle = {};
        var initDataHigh = {};
        //获取近30天，每天新增的文章数量
        var url = UrlHelper.getUrl("GetArticlesByDate");
        var articles = null;
        var articlesJuniorJson = {};
        var articlesMiddleJson = {};
        var articlesHighJson = {};
        $getJSONSync(url, { dateGap: dateGap }, function (data) {
            acticles = data.content;
            for (var i = 0; i < dateGap;i++) {
                var key = moment().add(1 - dateGap + i, "days").format("YYYY-MM-DD");
                articlesJuniorJson[key] = acticles[0][i][key];
                articlesMiddleJson[key] = acticles[1][i][key];
                articlesHighJson[key] = acticles[2][i][key];
            }
        });
    </script>
    <script>
        RaeClassForm.IsHomeMode = true;
        var myChart = echarts.init(document.getElementById('raeChart'));
        var dataMap = {};
        function dataFormatter(obj) {
            var pList = ["Junior", "Middle", "High"];
            var temp;
            for (var i = 0; i < dateGap; i++) {
                var max = 0;
                var sum = 0;
                var key = moment().add(1 - dateGap + i, "days").format("YYYY-MM-DD");
                temp = obj[key];
                for (var j = 0, l = temp.length; j < l; j++) {
                    max = Math.max(max, temp[j]);
                    sum += temp[j];
                    obj[key][j] = {
                        name: pList[j],
                        value: temp[j]
                    }
                }
                obj[key + 'max'] = Math.floor(max / 100) * 100;
                obj[key + 'sum'] = sum;
            }
            return obj;
        }
        dataMap.dataJunior = dataFormatter(articlesJuniorJson);
        dataMap.dataMiddle = dataFormatter(articlesMiddleJson);
        dataMap.dataHigh = dataFormatter(articlesHighJson);
        option = {
            baseOption: {
                timeline: {
                     //y: 0,
                    axisType: 'category',
                    //realtime: false,
                    // loop: false,
                    autoPlay: false,
                    currentIndex: 0,
                    playInterval: 1000,
                    // controlStyle: {
                    //     position: 'left'
                    // },
                    data: [],
                    label: {
                        formatter: function (s) {
                            return s;
                        }
                    }
                },
                title: {
                    subtext: ''
                },
                tooltip: {
                },
                legend: {
                    x: 'right',
                    data: ['Junior', 'Middle', 'High'],
                    selected: {
                    }
                },
                calculable: true,
                grid: {
                    top: 80,
                    bottom: 100,
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow',
                            label: {
                                show: true,
                                formatter: function (params) {
                                    return params.value.replace('\n', '');
                                }
                            }
                        }
                    }
                },
                xAxis: [
                    {
                        'type': 'category',
                        'axisLabel': { 'interval': 0 },
                        'data': [
                            'Read', 'Listen', 'Spoken'
                        ],
                        splitLine: { show: false }
                    }
                ],
                yAxis: [
                    {
                        type: 'value',
                        name: 'Quantity'
                    }
                ],
                series: [
                    { name: 'Junior', type: 'bar' },
                    { name: 'Middle', type: 'bar' },
                    { name: 'High', type: 'bar' },
                    {
                        name: 'ArticleRate',
                        type: 'pie',
                        center: ['70%', '30%'],
                        radius: '25%',
                        z: 100
                    }
                ]
            },
            options:[]
        };

        for (var i = 0; i < dateGap; i++) {
            var key = moment().add(1 - dateGap + i, "days").format("YYYY-MM-DD");
            var title = key + " ArticleRate";
            var series = [];
            series.push({ data: dataMap.dataJunior[key] });
            series.push({ data: dataMap.dataMiddle[key] });
            series.push({ data: dataMap.dataHigh[key] });
            var sumData = [];
            sumData.push({ name: 'Junior', value: dataMap.dataJunior[key + 'sum'] });
            sumData.push({ name: 'Middle', value: dataMap.dataMiddle[key + 'sum'] });
            sumData.push({ name: 'High', value: dataMap.dataHigh[key + 'sum'] });
            series.push({ data: sumData });
            var optionItem = {};
            optionItem["title"] = { "text": title };
            optionItem["series"] = series;
            option.options.push(optionItem);
            option.baseOption.timeline.data.push(moment().add(1 - dateGap + i, "days").format("MM-DD"));
        }
        option.baseOption.timeline.currentIndex = dateGap - 1;
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);

    </script>
}



